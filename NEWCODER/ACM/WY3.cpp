/**
 * 题目描述：
 * 小易经常沉迷于网络游戏.有一次,他在玩一个打怪升级的游戏,他的角色的初始能力值为 a.在接下来的一段时间内,
 * 他将会依次遇见n个怪物,每个怪物的防御力为b1,b2,b3...bn. 如果遇到的怪物防御力bi小于等于小易的当前能力值c,
 * 那么他就能轻松打败怪物,并 且使得自己的能力值增加bi;如果bi大于c,那他也能打败怪物,但他的能力值只能
 * 增加bi 与c的最大公约数.那么问题来了,在一系列的锻炼后,小易的最终能力值为多少?
 * 
 * 输入描述：
 * 对于每组数据,第一行是两个整数n(1≤n<100000)表示怪物的数量和a表示小易的初始能力值.
 * 第二行n个整数,b1,b2...bn(1≤bi≤n)表示每个怪物的防御力
 * 
 * 输出描述：
 * 对于每组数据,输出一行.每行仅包含一个整数,表示小易的最终能力值
 * 
 * 示例：
 * 输入：
 * 3 50
 * 50 105 200
 * 5 20
 * 30 20 15 40 100
 * 输出：
 * 110
 * 205
 */ 
#include<iostream>

using namespace std;

/**
 * 解题思路：
 * 因为怪物是依次出现，所以不能选择先打哪个，再打哪个
 * 问题就归结为：
 * 每次，当前战斗力c打于等于怪物防御力b，c = c + b
 * 当前战斗力c小于怪物防御力b，c = c + (b和c的最大公约数)
 * 该题实为求两个数之间的最大公约数
 */ 
int getAbi(int c,int b)   //求两个数的最大公约数
{
    //b大 c小
    int tmp;
    while (c!=0)
    {
        tmp = b % c;
        b = c;
        c = tmp;
    }
    return b;
    
}

int main()
{
    int n,a;
    while (cin>>n>>a)
    {
        int *b = new int[n];
        for(int i=0;i<n;i++)
        {
            cin>>b[i];
        }
        int c = a;
        for(int i=0;i<n;i++)
        {
            if(b[i]<=c)
            {
                c += b[i];
            }
            else
            {
                c += getAbi(c,b[i]);
            }
        }
        cout << c << endl;
    }
    
    return 0;
}