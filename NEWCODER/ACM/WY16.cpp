/**
 * 题目描述：
 * 二货小易有一个W*H的网格盒子，网格的行编号为0~H-1，网格的列编号为0~W-1。每个格子至多可以放一块蛋糕，
 * 任意两块蛋糕的欧几里得距离不能等于2。对于两个格子坐标(x1,y1),(x2,y2)的欧几里得距离为:
 * ( (x1-x2) * (x1-x2) + (y1-y2) * (y1-y2) ) 的算术平方根，小易想知道最多可以放多少块蛋糕在网格盒子里。
 * 
 * 输入描述：
 * 每组数组包含网格长宽W,H，用空格分割.(1 ≤ W、H ≤ 1000)
 * 
 * 输出描述：
 * 输出一个最多可以放的蛋糕数
 * 
 * 示例：
 * 输入：
 * 3 2
 * 输出：
 * 4
 */ 

#include<iostream>

using namespace std;

int main()
{
    int W,H;
    while (cin>>W>>H)
    {
        int num = 0;
        int num1 = 2*(W/4) + (((W%4)-2)<0?(W%4):2); //前1，2行 可放置的最多蛋糕数
        int num2 = 2*(W/4) + (((W%4)-2)<0?0:(W%4)-2); //3，4行可放置的最多蛋糕数
        for(int i=0;i<H;i++)    //对于每一行
        {
            int t = i%4;    //每4行为一个周期
            if(t==0 || t==1)    //如果为1，2行
            {
                num += num1;
            }
            else    //如果为3，4行
            {
                num += num2;
            }
        }
        cout << num << endl;
    }
    return 0;
}