/**
 * 题目：
 * 写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。
 * 
 * 示例：
 * 输入：
 * 1,2
 * 输出：
 * 3
 * 
 */ 
#include<iostream>

using namespace std;

/*
    计算机中存整数n是用补码存的。

    如果n为正数，则原码=反码=补码
    如果n为负数，则补码=反码+1 

    无进位和运算就是按位异或结果，
    进位就是与运算结果但是需要左移一位，因为进位影响下一位的运算

    算法步骤：

    1.计算a和b的无进位和，和进位
    2.如果进位不为0，则说明a+b的结果等于无进位和+进位，此时，把无进位和作为a，进位作为b，继续计算
    3.如果进位等于0， 说明此时a+b的结果就等于无进位和，返回无进位和即可
*/

int Add(int num1, int num2) 
{
    while(num2!=0)  //如果num2不为0（第二次后，即如果进位不为0，就继续相加，直至进位为0）
    {
        int c = ((num1&num2) <<1);  //计算进位：进位 为当前&运算结果<<1（进位影响的是高一位）
        num1 ^= num2;   //计算无进位和
        num2 = c;   //将进位 赋给num2
    }
    return num1;    //返回和
}

int main()
{
    cout << Add(15,20) << endl;
    cout << Add(-15,-3) << endl;
    system("pause");
    return 0;
}